<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.GiftExchangeRecordDao">

    <resultMap type="com.platform.entity.GiftExchangeRecordEntity" id="giftExchangeRecordMap">
        <result property="id" column="id"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="userId" column="user_id"/>
        <result property="giftId" column="gift_id"/>
        <result property="usePoint" column="use_point"/>
        <result property="number" column="number"/>
        <result property="orderSn" column="order_sn"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="queryObject" resultType="com.platform.entity.GiftExchangeRecordEntity">
		select
			`id`,
			`merchant_id`,
			`user_id`,
			`gift_id`,
			`use_point`,
			`order_sn`,
			`create_time`,
			`update_time`
		from gift_exchange_record
		where id = #{id}
	</select>

    <select id="queryList" resultType="com.platform.entity.GiftExchangeRecordEntity">
        select
        r.`id`,
        r.`merchant_id`,
        r.`user_id`,
        r.`user_id`,
        u.nickname as nickName,
        g.name as giftName,
        g.primary_pic_url as gift_pic,
        r.`gift_id`,
        r.`use_point`,
        r.`number`,
        r.`order_sn`,
        r.`create_time`,
        r.`update_time`
        from gift_exchange_record r
        left join gift g on r.gift_id=g.id
        left join user u on u.id=r.user_id
        where 1=1
        <if test="merchantId!=null">
            and r.merchant_id=#{merchantId}
        </if>
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from gift_exchange_record
        WHERE 1=1
        <if test="merchantId!=null">
            and merchant_id=#{merchantId}
        </if>
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.platform.entity.GiftExchangeRecordEntity" useGeneratedKeys="true" keyProperty="id">
		insert into gift_exchange_record(
			 `merchant_id`,
			`user_id`,
			`gift_id`,
			`use_point`,
			`number`,
			`order_sn`,
			`create_time`,
			`update_time`)
		values(
		    #{merchantId},
			#{userId},
			#{giftId},
			#{usePoint},
			#{number},
			#{orderSn},
			#{createTime},
			#{updateTime})
	</insert>

    <update id="update" parameterType="com.platform.entity.GiftExchangeRecordEntity">
        update gift_exchange_record
        <set>
            <if test="userId != null">`user_id` = #{userId},</if>
            <if test="giftId != null">`gift_id` = #{giftId},</if>
            <if test="number != null">`number` = #{number},</if>
            <if test="usePoint != null">`use_point` = #{usePoint},</if>
            <if test="orderSn != null">`order_sn` = #{orderSn},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateTime != null">`update_time` = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from gift_exchange_record where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from gift_exchange_record where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>