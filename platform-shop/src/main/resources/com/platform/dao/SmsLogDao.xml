<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.SmsLogDao">

    <resultMap type="com.platform.entity.SmsLogEntity" id="smsLogMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="nickName" column="nickname"/>
        <result property="phone" column="phone"/>
        <result property="logDate" column="log_date"/>
        <result property="smsCode" column="sms_code"/>
        <result property="sendStatus" column="send_status"/>
        <result property="smsText" column="sms_text"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.SmsLogEntity">
		select
			`id`,
			`user_id`,
			`phone`,
			`log_date`,
			`sms_code`,
			`send_status`,
			`sms_text`
		from sms_log
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.SmsLogEntity">
		select
    		s.`id`,
    		s.`user_id`,
    		u.`nickname`,
    		`phone`,
    		`log_date`,
    		`sms_code`,
    		`send_status`,
    		`sms_text`
		from sms_log s left join user u on u.id=s.user_id
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from sms_log
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.SmsLogEntity" useGeneratedKeys="true" keyProperty="id">
		insert into sms_log(
			`user_id`,
			`phone`,
			`log_date`,
			`sms_code`,
			`send_status`,
			`sms_text`)
		values(
			#{userId},
			#{phone},
			#{logDate},
			#{smsCode},
			#{sendStatus},
			#{smsText})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.SmsLogEntity">
		update sms_log 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="phone != null">`phone` = #{phone}, </if>
			<if test="logDate != null">`log_date` = #{logDate}, </if>
			<if test="smsCode != null">`sms_code` = #{smsCode}, </if>
			<if test="sendStatus != null">`send_status` = #{sendStatus}, </if>
			<if test="smsText != null">`sms_text` = #{smsText}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from sms_log where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sms_log where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>