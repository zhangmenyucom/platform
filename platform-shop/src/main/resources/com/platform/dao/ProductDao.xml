<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ProductDao">

    <resultMap type="com.platform.entity.ProductEntity" id="productMap">
        <result property="id" column="id"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="goodsId" column="goods_id"/>
        <result property="goodsSpecificationIds" column="goods_specification_ids"/>
        <result property="goodsSn" column="goods_sn"/>
        <result property="goodsNumber" column="goods_number"/>
        <result property="retailPrice" column="retail_price"/>
        <result property="marketPrice" column="market_price"/>
    </resultMap>

    <select id="queryObject" resultType="com.platform.entity.ProductEntity">
		select
			id,
			merchant_id,
			goods_id,
			goods_specification_ids,
			goods_sn,
			goods_number,
			retail_price,
			market_price
		from product
		where id = #{id}
	</select>

    <select id="queryList" resultType="com.platform.entity.ProductEntity">
        select
        product.id,
        product.merchant_id,
        product.goods_id,
        product.goods_specification_ids,
        product.goods_sn,
        product.goods_number,
        product.retail_price,
        product.market_price,
        goods.name goods_name
        from product
        LEFT JOIN goods ON product.goods_id = goods.id
        where 1=1
        <if test="merchantId!=null">
            and product.merchant_id=#{merchantId}
        </if>
        <if test="goodsId != null and goodsId.trim() != ''">
            AND product.goods_id = #{goodsId}
        </if>
        <if test="goodsName != null and goodsName.trim() != ''">
            AND goods.name LIKE concat('%',#{goodsName},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by product.id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from product
        LEFT JOIN goods ON product.goods_id = goods.id
        where 1=1
        <if test="merchantId!=null">
            and product.merchant_id=#{merchantId}
        </if>
        <if test="goodsId != null and goodsId.trim() != ''">
            AND product.goods_id = #{goodsId}
        </if>
        <if test="goodsName != null and goodsName.trim() != ''">
            AND goods.name LIKE concat('%',#{goodsName},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.platform.entity.ProductEntity" useGeneratedKeys="true" keyProperty="id">
		insert into product(
			`merchant_id`,
			`goods_id`,
			`goods_specification_ids`,
			`goods_sn`,
			`goods_number`,
			`retail_price`,
			`market_price`)
		values(
			#{merchantId},
			#{goodsId},
			#{goodsSpecificationIds},
			#{goodsSn},
			#{goodsNumber},
			#{retailPrice},
			#{marketPrice})
	</insert>

    <update id="update" parameterType="com.platform.entity.ProductEntity">
        update product
        <set>
            <if test="goodsId != null">`goods_id` = #{goodsId},</if>
            <if test="goodsSpecificationIds != null">`goods_specification_ids` = #{goodsSpecificationIds},</if>
            <if test="goodsSn != null">`goods_sn` = #{goodsSn},</if>
            <if test="goodsNumber != null">`goods_number` = #{goodsNumber},</if>
            <if test="retailPrice != null">`retail_price` = #{retailPrice},</if>
            <if test="marketPrice != null">`market_price` = #{marketPrice}</if>
        </set>
        where 1=1
        <if test="id!=null">
            and id = #{id}
        </if>
        <if test="goodsId!=null">
            and goods_id = #{goodsId}
        </if>
    </update>

    <delete id="delete">
		delete from product where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from product where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>