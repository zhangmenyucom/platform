<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.GiftDao">

    <resultMap type="com.platform.entity.GiftEntity" id="giftMap">
        <result property="id" column="id"/>
		<result property="merchantId" column="merchant_id"/>
        <result property="type" column="type"/>
        <result property="picUrl" column="pic_url"/>
        <result property="name" column="name"/>
        <result property="pointValue" column="point_value"/>
        <result property="status" column="status"/>
        <result property="giftDesc" column="gift_desc"/>
        <result property="sortOrder" column="sort_order"/>
        <result property="goodsId" column="goods_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.GiftEntity">
		select
			`id`,
			`type`,
			`pic_url`,
			`name`,
			`point_value`,
			`status`,
			`gift_desc`,
			`sort_order`,
			`goods_id`,
			`create_time`,
			`update_time`
		from gift
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.GiftEntity">
		select
    		`id`,
    		`type`,
    		`pic_url`,
    		`name`,
    		`point_value`,
    		`status`,
    		`gift_desc`,
    		`sort_order`,
    		`goods_id`,
    		`create_time`,
    		`update_time`
		from gift
		where 1=1
		<if test="merchantId!=null">
			and merchant_id=#{merchantId}
		</if>
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from gift
		where 1=1
		<if test="merchantId!=null">
			and merchant_id=#{merchantId}
		</if>
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.GiftEntity" useGeneratedKeys="true" keyProperty="id">
		insert into gift(
			`type`,
			`pic_url`,
			`name`,
			`point_value`,
			`status`,
			`gift_desc`,
			`sort_order`,
			`goods_id`,
			`create_time`,
			`update_time`)
		values(
			#{type},
			#{picUrl},
			#{name},
			#{pointValue},
			#{status},
			#{giftDesc},
			#{sortOrder},
			#{goodsId},
			#{createTime},
			#{updateTime})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.GiftEntity">
		update gift 
		<set>
			<if test="type != null">`type` = #{type}, </if>
			<if test="picUrl != null">`pic_url` = #{picUrl}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="pointValue != null">`point_value` = #{pointValue}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="giftDesc != null">`gift_desc` = #{giftDesc}, </if>
			<if test="sortOrder != null">`sort_order` = #{sortOrder}, </if>
			<if test="goodsId != null">`goods_id` = #{goodsId}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from gift where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from gift where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>