<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ApiWithdrawOrderMapper">

    <resultMap type="com.platform.entity.WithdrawOrderVo" id="withdrawOrderMap">
        <result property="id" column="id"/>
        <result property="orderSn" column="order_sn"/>
		<result property="merchantId" column="merchant_id"/>
        <result property="userId" column="user_id"/>
        <result property="realName" column="real_name"/>
        <result property="withdrawAmount" column="withdraw_amount"/>
        <result property="withdrawAccount" column="withdraw_account"/>
        <result property="accountType" column="account_type"/>
        <result property="status" column="status"/>
        <result property="comment" column="comment"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.WithdrawOrderVo">
		select
			`id`,
			`order_sn`,
			`merchant_id`,
			`user_id`,
			`real_name`,
			`withdraw_amount`,
			`withdraw_account`,
			`account_type`,
			`status`,
			`comment`,
			`create_time`,
			`update_time`
		from withdraw_order
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.WithdrawOrderVo">
		select
    		`id`,
        `order_sn`,
		    `merchant_id`,
    		`user_id`,
    		`real_name`,
    		`withdraw_amount`,
    		`withdraw_account`,
    		`account_type`,
    		`status`,
    		`comment`,
    		`create_time`,
    		`update_time`
		from withdraw_order
		WHERE 1=1
		<if test="merchantId!=null">
			and merchant_id=#{merchantId}
		</if>
		<if test="userId!=null">
			and user_id=#{userId}
		</if>
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from withdraw_order
		WHERE 1=1
		<if test="merchantId!=null">
			and merchant_id=#{merchantId}
		</if>
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.WithdrawOrderVo" useGeneratedKeys="true" keyProperty="id">
		insert into withdraw_order(
			`user_id`,
			`order_sn`,
			`real_name`,
		    `merchant_id`,
			`withdraw_amount`,
			`withdraw_account`,
			`account_type`,
			`status`,
			`comment`,
			`create_time`,
			`update_time`)
		values(
			#{userId},
			#{orderSn},
			#{realName},
			#{merchantId},
			#{withdrawAmount},
			#{withdrawAccount},
			#{accountType},
			#{status},
			#{comment},
			now(),
			now())
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.WithdrawOrderVo">
		update withdraw_order 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
            <if test="orderSn != null">`order_sn` = #{orderSn},</if>
			<if test="realName != null">`real_name` = #{realName}, </if>
			<if test="withdrawAmount != null">`withdraw_amount` = #{withdrawAmount}, </if>
			<if test="withdrawAccount != null">`withdraw_account` = #{withdrawAccount}, </if>
			<if test="accountType != null">`account_type` = #{accountType}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="comment != null">`comment` = #{comment}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from withdraw_order where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from withdraw_order where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>