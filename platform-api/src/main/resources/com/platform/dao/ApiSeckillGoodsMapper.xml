<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ApiSeckillGoodsMapper">

    <resultMap type="com.platform.entity.SeckillGoodsVo" id="seckillGoodsMap">
        <result property="id" column="id"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="goodsId" column="goods_id"/>
        <result property="stock" column="stock"/>
        <result property="sold" column="sold"/>
        <result property="curPrice" column="cur_price"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="queryObject" resultType="com.platform.entity.SeckillGoodsVo">
		select
        sg.`id`,
        sg.`merchant_id`,
        sg.`goods_id`,
        sg.`stock`,
        sg.`sold`,
        sg.`status`,
        sg.`cur_price`,
        sg.`start_time`,
        sg.`end_time`,
        sg.`description`,
        sg.`create_time`,
        sg.`update_time`,
        g.name as goods_name,
        g.market_price,
        g.primary_pic_url as goods_pic
        from seckill_goods sg,goods g
        WHERE 1=1
        and sg.goods_id=g.id
		and sg.id = #{id}
	</select>

    <select id="queryList" resultType="com.platform.entity.SeckillGoodsVo">
        select
        sg.`id`,
        sg.`merchant_id`,
        sg.`goods_id`,
        sg.`stock`,
        sg.`sold`,
        sg.`status`,
        sg.`cur_price`,
        sg.`start_time`,
        sg.`end_time`,
        sg.`description`,
        sg.`create_time`,
        sg.`update_time`,
        g.name as goods_name,
        g.market_price,
        g.primary_pic_url as goods_pic
        from seckill_goods sg,goods g
        WHERE 1=1 and sg.goods_id=g.id and status=1
        <if test="merchantId!=null">
            and sg.merchant_id=#{merchantId}
        </if>
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from seckill_goods
        WHERE 1=1
        <if test="merchantId!=null">
            and merchant_id=#{merchantId}
        </if>
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.platform.entity.SeckillGoodsVo" useGeneratedKeys="true" keyProperty="id">
		insert into seckill_goods(
			`merchant_id`,
			`goods_id`,
			`stock`,
			`sold`,
			`status`,
			`cur_price`,
			`start_time`,
			`end_time`,
			`description`,
			`create_time`,
			`update_time`)
		values(
			#{merchantId},
			#{goodsId},
			#{stock},
			#{sold},
			#{status},
			#{curPrice},
			#{startTime},
			#{endTime},
			#{description},
			#{createTime},
			#{updateTime})
	</insert>

    <update id="update" parameterType="com.platform.entity.SeckillGoodsVo">
        update seckill_goods
        <set>
            <if test="merchantId != null">`merchant_id` = #{merchantId},</if>
            <if test="goodsId != null">`goods_id` = #{goodsId},</if>
            <if test="stock != null">`stock` = #{stock},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="sold != null">`sold` = #{sold},</if>
            <if test="curPrice != null">`cur_price` = #{curPrice},</if>
            <if test="startTime != null">`start_time` = #{startTime},</if>
            <if test="endTime != null">`end_time` = #{endTime},</if>
            <if test="description != null">`description` = #{description},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateTime != null">`update_time` = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from seckill_goods where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from seckill_goods where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>